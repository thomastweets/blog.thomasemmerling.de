<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>thomastweets</title><link href="https://blog.thomasemmerling.de/" rel="alternate"></link><link href="https://blog.thomasemmerling.de/feeds/all.atom.xml" rel="self"></link><id>https://blog.thomasemmerling.de/</id><updated>2019-03-11T00:00:00+01:00</updated><entry><title>Setting up IPv6 with FritzBox 7530 and EdgeRouter Lite</title><link href="https://blog.thomasemmerling.de/setting-up-ipv6-with-fritzbox-7530-and-edgerouter-lite.html" rel="alternate"></link><published>2019-03-11T00:00:00+01:00</published><updated>2019-03-11T00:00:00+01:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2019-03-11:/setting-up-ipv6-with-fritzbox-7530-and-edgerouter-lite.html</id><summary type="html">&lt;p&gt;I have been running a 'double NAT' setup for some years now: in the beginning because I had to due to my ISP regulations (yes, Ziggo.nl and plusnet, I am looking at you), nowadays as a deliberate choice to segment the network into ISP specific devices (mostly the SIP …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been running a 'double NAT' setup for some years now: in the beginning because I had to due to my ISP regulations (yes, Ziggo.nl and plusnet, I am looking at you), nowadays as a deliberate choice to segment the network into ISP specific devices (mostly the SIP client) and my own network. On the WAN-facing side I am using a &lt;a href="https://en.avm.de/products/fritzbox/fritzbox-7530/"&gt;FritzBox 7530&lt;/a&gt;. Behind the FritzBox I use the almighty &lt;a href="https://www.ui.com/edgemax/edgerouter-lite/"&gt;EdgeRouter Lite&lt;/a&gt; that gives you a full-fledged &lt;a href="https://en.wikipedia.org/wiki/Vyatta"&gt;Vyatta&lt;/a&gt;-based router. However, with great power comes great responsibility so you have to do some digging if you want to configure certain features. Finally, I have a &lt;a href="https://www.ui.com/unifi/unifi-ap-ac-pro/"&gt;Unifi AP AC Pro&lt;/a&gt; as my WiFi access point - very recommendable piece of hardware but not the star of this blog post.&lt;/p&gt;
&lt;p&gt;Recently, I wanted to set up IPv6 again after having moved to a new place and a new ISP. This turned out to be a little longer journey and I decided to document it here, potentially for my future self ;)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let's start with the FritzBox (sorry for the German menu item names; my FritzBox version does not let me change the language setting). First of all, backup your current configuration (&lt;code&gt;System&lt;/code&gt;-&amp;gt;&lt;code&gt;Sicherung&lt;/code&gt;)! You obviously want to enable IPv6 at &lt;code&gt;Internet&lt;/code&gt; -&amp;gt; &lt;code&gt;Zugangsdaten&lt;/code&gt; -&amp;gt; &lt;code&gt;IPv6&lt;/code&gt;. Make sure that &lt;code&gt;IPv6-Unterstützung aktiv&lt;/code&gt; is checked as well as (if your ISP still offers IPv4) &lt;code&gt;Native IPv4-Anbindung verwenden&lt;/code&gt;. &lt;code&gt;DHCPv6 Rapid Commit verwenden&lt;/code&gt; should also be active. This should already give you an IPv6 address that you can see in &lt;code&gt;Internet&lt;/code&gt; -&amp;gt; &lt;code&gt;Online-Monitor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, you want to configure the announcing of IPv6 into the network and, therefore, towards the EdgeRouter. In &lt;code&gt;Heimnetz&lt;/code&gt;-&amp;gt; &lt;code&gt;Netzwerk&lt;/code&gt;-&amp;gt;&lt;code&gt;Netzwerkeinstellungen&lt;/code&gt; scroll down and click on &lt;code&gt;IPv6-Adressen&lt;/code&gt;. Select &lt;code&gt;Unique Local Addresses (ULA) zuweisen, solange keine IPv6-Internetverbindung besteht (empfohlen)&lt;/code&gt;, deselect &lt;code&gt;Auch IPv6-Präfixe zulassen, die andere IPv6-Router im Heimnetz bekanntgeben&lt;/code&gt;, select &lt;code&gt;Diese FRITZ!Box stellt den Standard-Internetzugang zur Verfügung&lt;/code&gt;, and select &lt;code&gt;DNSv6-Server auch über Router Advertisement bekanntgeben (RFC 5006)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Select &lt;code&gt;DHCPv6-Server in der FRITZ!Box für das Heimnetz aktivieren:&lt;/code&gt; and &lt;code&gt;DNS-Server, Präfix (IA_PD) und IPv6-Adresse (IA_NA) zuweisen&lt;/code&gt; (see also &lt;a href="https://web.nettworks.org/wiki/pages/viewpage.action?pageId=35651587"&gt;here&lt;/a&gt; as a reference). Finally click &lt;code&gt;OK&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As the last step on the FritzBox, you want to expose the EdgeRouter. Go to &lt;code&gt;Internet&lt;/code&gt;-&amp;gt;&lt;code&gt;Freigaben&lt;/code&gt;-&amp;gt;&lt;code&gt;Portfreigaben&lt;/code&gt;. Click on &lt;code&gt;Gerät für Freigaben hinzufügen&lt;/code&gt;. Select the hostname of the EdgeRouter (e.g. &lt;code&gt;ubnt&lt;/code&gt;). Activate all checkmarks on this page (&lt;code&gt;Selbstständige Portfreigaben für dieses Gerät erlauben.&lt;/code&gt;, &lt;code&gt;Dieses Gerät komplett für den Internetzugriff über IPv4 freigeben (Exposed Host).&lt;/code&gt;, &lt;code&gt;PING6 freigeben.&lt;/code&gt;, &lt;code&gt;Firewall für delegierte IPv6-Präfixe dieses Gerätes öffnen.&lt;/code&gt;, &lt;code&gt;Dieses Gerät komplett für den Internetzugriff über IPv6 freigeben (Exposed Host).&lt;/code&gt;). These settings will ensure that all IPv6 tests can pass making your network devices fully IPv6 compliant (see also &lt;a href="https://www.bjoerns-techblog.de/2017/06/ipv6-icmp-filtered-an-fritzbox-beheben/"&gt;here&lt;/a&gt;) - and also completely exposed to the internet! So we will need to take care of configuring the firewall on the EdgeRouter.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;On to the EdgeRouter Lite. A great set of helpful articles by Logan Marchione about setting up the EdgeRouter Lite can be found &lt;a href="https://loganmarchione.com/2016/04/ubiquiti-edgerouter-lite-setup/"&gt;here&lt;/a&gt;. Again, as a first step you should backup your configuration, either via the GUI or via SSH using &lt;code&gt;show configuration commands&lt;/code&gt;. Then, it is a good idea to start fresh an run the &lt;code&gt;Basic Setup&lt;/code&gt; Wizard. Please note that this wipes your current configuration!&lt;/p&gt;
&lt;p&gt;It is not necessary to set autoconf for IPv6 interfaces when IA_PD and IA_NA are served by the FritzBox (see above). You also do not need to explicitly set Router Advertisement (RA) when SLAAC is active on the WAN interface as the EdgeRouter is creating the RA automatically (see &lt;a href="https://community.ubnt.com/t5/EdgeRouter/IPv6-Setup/m-p/1833655/highlight/true#M150102"&gt;here&lt;/a&gt; for a more detailed explanation). Finally, you need to set up a firewall rule to allow incoming ICMPv6 packages (see also &lt;a href="https://community.ubnt.com/t5/EdgeRouter/Filtered-ICMP-on-ipv6-test-com/m-p/2093368/highlight/true#M180948"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;As a reference, I am posting part of my configuration below (created with &lt;code&gt;show configuration commands&lt;/code&gt;). Please adapt to your needs before running it on your EdgeRouter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; firewall all-ping &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall broadcast-ping disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN default-action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN description &lt;span class="s1"&gt;&amp;#39;WAN inbound traffic forwarded to LAN&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN enable-default-log
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;10&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;10&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow established/related sessions&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;10&lt;/span&gt; state established &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;10&lt;/span&gt; state related &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;20&lt;/span&gt; action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;20&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Drop invalid state&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;20&lt;/span&gt; state invalid &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;30&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;30&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow IPv6 icmp&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_IN rule &lt;span class="m"&gt;30&lt;/span&gt; protocol ipv6-icmp
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL default-action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL description &lt;span class="s1"&gt;&amp;#39;WAN inbound traffic to the router&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL enable-default-log
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow established/related sessions&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; state established &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; state related &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Drop invalid state&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; state invalid &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;30&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;30&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow IPv6 icmp&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;30&lt;/span&gt; protocol ipv6-icmp
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;40&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;40&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;allow dhcpv6&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;40&lt;/span&gt; destination port &lt;span class="m"&gt;546&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;40&lt;/span&gt; protocol udp
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-name WANv6_LOCAL rule &lt;span class="m"&gt;40&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; port &lt;span class="m"&gt;547&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-receive-redirects disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ipv6-src-route disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall ip-src-route disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall log-martians &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN default-action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN description &lt;span class="s1"&gt;&amp;#39;WAN to internal&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;10&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;10&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow established/related&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;10&lt;/span&gt; state established &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;10&lt;/span&gt; state related &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;20&lt;/span&gt; action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;20&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Drop invalid state&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_IN rule &lt;span class="m"&gt;20&lt;/span&gt; state invalid &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL default-action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL description &lt;span class="s1"&gt;&amp;#39;WAN to router&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; action accept
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Allow established/related&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; state established &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;10&lt;/span&gt; state related &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; action drop
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;Drop invalid state&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall name WAN_LOCAL rule &lt;span class="m"&gt;20&lt;/span&gt; state invalid &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall receive-redirects disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall send-redirects &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; firewall source-validation disable
&lt;span class="nb"&gt;set&lt;/span&gt; firewall syn-cookies &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 address dhcp
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 description Internet
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth1 host-address &lt;span class="s1"&gt;&amp;#39;::1&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth1 prefix-id &lt;span class="s1"&gt;&amp;#39;:1&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth1 service slaac
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth2 host-address &lt;span class="s1"&gt;&amp;#39;::1&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth2 prefix-id &lt;span class="s1"&gt;&amp;#39;:2&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; interface eth2 service slaac
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd pd &lt;span class="m"&gt;0&lt;/span&gt; prefix-length /60
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 dhcpv6-pd rapid-commit &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 duplex auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 firewall in ipv6-name WANv6_IN
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 firewall in name WAN_IN
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 firewall &lt;span class="nb"&gt;local&lt;/span&gt; ipv6-name WANv6_LOCAL
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 firewall &lt;span class="nb"&gt;local&lt;/span&gt; name WAN_LOCAL
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth0 speed auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth1 address &lt;span class="m"&gt;192&lt;/span&gt;.168.40.1/24
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth1 description Local
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth1 duplex auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth1 speed auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth2 address &lt;span class="m"&gt;192&lt;/span&gt;.168.2.1/24
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth2 description &lt;span class="s1"&gt;&amp;#39;Local 2&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth2 duplex auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces ethernet eth2 speed auto
&lt;span class="nb"&gt;set&lt;/span&gt; interfaces loopback lo
&lt;span class="nb"&gt;set&lt;/span&gt; port-forward auto-firewall &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; port-forward hairpin-nat &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; port-forward lan-interface eth1
&lt;span class="nb"&gt;set&lt;/span&gt; port-forward wan-interface eth0
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server disabled &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server hostfile-update disable
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN1 authoritative &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN1 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.40.0/24 default-router &lt;span class="m"&gt;192&lt;/span&gt;.168.40.1
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN1 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.40.0/24 dns-server &lt;span class="m"&gt;192&lt;/span&gt;.168.40.1
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN1 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.40.0/24 lease &lt;span class="m"&gt;86400&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN1 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.40.0/24 start &lt;span class="m"&gt;192&lt;/span&gt;.168.40.20 stop &lt;span class="m"&gt;192&lt;/span&gt;.168.40.200
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN2 authoritative &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN2 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.2.0/24 default-router &lt;span class="m"&gt;192&lt;/span&gt;.168.2.1
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN2 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.2.0/24 dns-server &lt;span class="m"&gt;192&lt;/span&gt;.168.2.1
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN2 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.2.0/24 lease &lt;span class="m"&gt;86400&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server shared-network-name LAN2 subnet &lt;span class="m"&gt;192&lt;/span&gt;.168.2.0/24 start &lt;span class="m"&gt;192&lt;/span&gt;.168.2.38 stop &lt;span class="m"&gt;192&lt;/span&gt;.168.2.243
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server static-arp disable
&lt;span class="nb"&gt;set&lt;/span&gt; service dhcp-server use-dnsmasq disable
&lt;span class="nb"&gt;set&lt;/span&gt; service dns forwarding cache-size &lt;span class="m"&gt;150&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service dns forwarding listen-on eth1
&lt;span class="nb"&gt;set&lt;/span&gt; service dns forwarding listen-on eth2
&lt;span class="nb"&gt;set&lt;/span&gt; service gui http-port &lt;span class="m"&gt;80&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service gui https-port &lt;span class="m"&gt;443&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service gui older-ciphers &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service nat rule &lt;span class="m"&gt;5010&lt;/span&gt; description &lt;span class="s1"&gt;&amp;#39;masquerade for WAN&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service nat rule &lt;span class="m"&gt;5010&lt;/span&gt; outbound-interface eth0
&lt;span class="nb"&gt;set&lt;/span&gt; service nat rule &lt;span class="m"&gt;5010&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt; masquerade
&lt;span class="nb"&gt;set&lt;/span&gt; service ssh port &lt;span class="m"&gt;22&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; service ssh protocol-version v2
&lt;span class="nb"&gt;set&lt;/span&gt; service unms disable
&lt;span class="nb"&gt;set&lt;/span&gt; system gateway-address &lt;span class="m"&gt;192&lt;/span&gt;.168.178.1
&lt;span class="nb"&gt;set&lt;/span&gt; system host-name ubnt
&lt;span class="nb"&gt;set&lt;/span&gt; system ntp server &lt;span class="m"&gt;0&lt;/span&gt;.ubnt.pool.ntp.org
&lt;span class="nb"&gt;set&lt;/span&gt; system ntp server &lt;span class="m"&gt;1&lt;/span&gt;.ubnt.pool.ntp.org
&lt;span class="nb"&gt;set&lt;/span&gt; system ntp server &lt;span class="m"&gt;2&lt;/span&gt;.ubnt.pool.ntp.org
&lt;span class="nb"&gt;set&lt;/span&gt; system ntp server &lt;span class="m"&gt;3&lt;/span&gt;.ubnt.pool.ntp.org
&lt;span class="nb"&gt;set&lt;/span&gt; system syslog global facility all level notice
&lt;span class="nb"&gt;set&lt;/span&gt; system syslog global facility protocols level debug
&lt;span class="nb"&gt;set&lt;/span&gt; system time-zone Europe/Berlin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I found some helpful commands for debugging in &lt;a href="https://kazoo.ga/dhcpv6-pd-for-native-ipv6/"&gt;this article&lt;/a&gt; describing the IPv6 setup for the EdgeRouter Lite. Also a tcpdump command for ICMPv6 packets on the EdgeRouter itself can help a lot when debugging:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump -n -i eth1 icmp6 and ip6&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="m"&gt;133&lt;/span&gt; or ip6&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="m"&gt;134&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you made it this far you are hopefully ready to enjoy a full 20/20 score on &lt;a href="http://ipv6-test.com/"&gt;ipv6-test.com&lt;/a&gt;. Congratulations!&lt;/p&gt;</content><category term="Tech"></category><category term="IPv6"></category><category term="network"></category><category term="Ubiquiti"></category><category term="EdgeRouter Lite"></category><category term="EdgeOS"></category><category term="Fritzbox 7530"></category><category term="AVM"></category><category term="Double-NAT"></category></entry><entry><title>Owncloud on docker behind nginx-proxy: file size error solved</title><link href="https://blog.thomasemmerling.de/owncloud-on-docker-behind-nginx-proxy-file-size-error-solved.html" rel="alternate"></link><published>2017-03-01T00:00:00+01:00</published><updated>2017-03-01T00:00:00+01:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2017-03-01:/owncloud-on-docker-behind-nginx-proxy-file-size-error-solved.html</id><summary type="html">&lt;p&gt;Wow, this took me a while: I am running an &lt;a href="https://owncloud.org"&gt;Owncloud&lt;/a&gt; server on my private VPS as a &lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt; container. I orchestrate all the different webapps that run on that server using &lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt; and make use of the magnificent &lt;a href="https://github.com/jwilder/nginx-proxy"&gt;jwilder/nginx-proxy&lt;/a&gt; (in combination with the &lt;a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion"&gt;docker-letsencrypt-nginx-proxy-companion&lt;/a&gt;)to serve different …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Wow, this took me a while: I am running an &lt;a href="https://owncloud.org"&gt;Owncloud&lt;/a&gt; server on my private VPS as a &lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt; container. I orchestrate all the different webapps that run on that server using &lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt; and make use of the magnificent &lt;a href="https://github.com/jwilder/nginx-proxy"&gt;jwilder/nginx-proxy&lt;/a&gt; (in combination with the &lt;a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion"&gt;docker-letsencrypt-nginx-proxy-companion&lt;/a&gt;)to serve different domains on the same VPS.&lt;/p&gt;
&lt;p&gt;While I was using Owncloud I encountered a nasty upload error every now and then. Something like &lt;code&gt;Error downloading [file] - server replied: Request Entity Too Large&lt;/code&gt; or &lt;code&gt;Continue blacklisting: Error downloading [file] - server replied: Request Entity Too Large&lt;/code&gt; or simply &lt;code&gt;Error downloading [file] - server replied: Request Entity Too Large&lt;/code&gt; and your file stays marked with a red cross or yellow exclamation mark. You get the point. There are a lot of &lt;a href="https://doc.owncloud.org/server/9.1/admin_manual/configuration_files/big_file_upload_configuration.html"&gt;guides&lt;/a&gt; on how to setup your &lt;a href="https://httpd.apache.org"&gt;Apache&lt;/a&gt; configuration to play nicely with Owncloud when it comes to bigger files. But in my case everything was set up using the &lt;a href="https://hub.docker.com/_/owncloud/"&gt;official Owncloud docker image&lt;/a&gt; that comes with all configuration files optimised already.&lt;/p&gt;
&lt;p&gt;Finally, today I &lt;a href="https://forums.freenas.org/index.php?threads/owncloud-request-entity-too-large.41794/"&gt;realized&lt;/a&gt; that the Nginx reverse proxy that is running in front of the Apache also demands configuration. Following &lt;a href="https://github.com/jwilder/nginx-proxy#per-virtual_host"&gt;this part of the documentation&lt;/a&gt; you want to volume mount the &lt;code&gt;/etc/nginx/vhost.d&lt;/code&gt; folder and add a configuration file for your Owncloud domain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;client_max_body_size 4096m&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go ahead and reload the nginx container. You might have to move the files that did not sync out of your local Owncloud folder and move them back in for the sync process to trigger again. And you have nice green checkmarks again!&lt;/p&gt;
&lt;p&gt;Hoping that I save someone time and headaches...
Cheers!&lt;/p&gt;</content><category term="Tech"></category><category term="owncloud"></category><category term="docker"></category><category term="nginx-proxy"></category><category term="note"></category></entry><entry><title>Automatic LaTeX CV publishing on GitHub Pages via TravisCI</title><link href="https://blog.thomasemmerling.de/automatic-latex-cv-publishing-on-github-pages-via-travisci.html" rel="alternate"></link><published>2016-01-28T00:00:00+01:00</published><updated>2016-01-28T00:00:00+01:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2016-01-28:/automatic-latex-cv-publishing-on-github-pages-via-travisci.html</id><summary type="html">&lt;p&gt;Recently, I wanted to update my CV and as I had good experiences with &lt;em&gt;LaTeX&lt;/em&gt; for writing my &lt;a href="http://dx.doi.org/10.13140/RG.2.1.1129.0644"&gt;diploma thesis&lt;/a&gt; I thought to give it a try for typesetting my CV, too. I started to remember that keeping the full LaTeX stack up-to-date and, more importantly, all package dependencies for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I wanted to update my CV and as I had good experiences with &lt;em&gt;LaTeX&lt;/em&gt; for writing my &lt;a href="http://dx.doi.org/10.13140/RG.2.1.1129.0644"&gt;diploma thesis&lt;/a&gt; I thought to give it a try for typesetting my CV, too. I started to remember that keeping the full LaTeX stack up-to-date and, more importantly, all package dependencies for compilation was a bit of a hassle (although there are great projects like &lt;a href="http://tug.org/mactex/"&gt;MacTeX&lt;/a&gt; of course!). It certainly did not appeal to my desire to keep things versionized and automated. And as I had &lt;a href="https://blog.thomasemmerling.de/automatic-pelican-publishing-on-github-pages-via-travisci.html"&gt;good experiences&lt;/a&gt; with &lt;a href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt; and &lt;a href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt; I thought to give it a try for my CV, too. So, here we go.&lt;/p&gt;
&lt;p&gt;We will use TravisCI to run a docker container that uses an image with an updated &lt;a href="http://tug.org/texlive/"&gt;TeX Live distribution&lt;/a&gt;. This docker container will then compile the file 'cv.tex' into a nice PDF file on every commit (and push) to the GitHub repository. This PDF file, in turn, is then pushed to the &lt;code&gt;gh-pages&lt;/code&gt; branch of the repository accompanied with an index.html that displays this very PDF and (if configured) a CNAME to customize the (sub-)domain under which this beautiful CV is available. Voila!
You can see an example at &lt;a href="http://cv.thomasemmerling.de"&gt;cv.thomasemmerling.de&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I that was a little too fast just head over to my GitHub repository &lt;a href="https://github.com/thomastweets/cv-on-ghpages"&gt;cv-on-ghpages&lt;/a&gt; and let me walk you through setting it up over there. It should be pretty straightforward - if not, please send me a comment, mail, tweet, issue, you name it.
And good luck with this job application!&lt;/p&gt;</content><category term="Tech"></category><category term="devops"></category><category term="Travis CI"></category><category term="GitHub Pages"></category><category term="git"></category><category term="continuous integration"></category><category term="LaTeX"></category><category term="CV"></category></entry><entry><title>Let's already encrypt!</title><link href="https://blog.thomasemmerling.de/lets-already-encrypt.html" rel="alternate"></link><published>2015-12-02T00:00:00+01:00</published><updated>2015-12-02T00:00:00+01:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2015-12-02:/lets-already-encrypt.html</id><summary type="html">&lt;p&gt;It seems that the internet finally understood that encryption is a necessity. Recently, the brilliant guys of &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; started their beta program and I got myself an invite for it. They &lt;a href="https://letsencrypt.org/2015/11/12/public-beta-timing.html"&gt;announced&lt;/a&gt; that they will open their beta to the public tomorrow and I thought that this is a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It seems that the internet finally understood that encryption is a necessity. Recently, the brilliant guys of &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; started their beta program and I got myself an invite for it. They &lt;a href="https://letsencrypt.org/2015/11/12/public-beta-timing.html"&gt;announced&lt;/a&gt; that they will open their beta to the public tomorrow and I thought that this is a good moment to show off the small script that I used until now before it vanishes into obsolescence.&lt;/p&gt;
&lt;p&gt;Before &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; came along &lt;a href="https://www.startssl.com"&gt;StartSSL&lt;/a&gt; was one way to obtain a ssl certificate at no cost. However, the workflow of creating and installing the certificates was not very straight forward which led to &lt;a href="https://konklone.com/post/switch-to-https-now-for-free"&gt;some&lt;/a&gt; &lt;a href="https://joshemerson.co.uk/blog/secure-your-site"&gt;blogposts&lt;/a&gt; trying to help the novice user. I wanted to streamline the process so that I could have SSL certificates for some domains including all kinds of subdomains in place. As the free StartSSL certificates are not wildcard certificates this called for some scripting.&lt;/p&gt;
&lt;p&gt;You can look at the code at &lt;a href="https://github.com/thomastweets/setupSSL"&gt;github.com/thomastweets/setupSSL&lt;/a&gt;. There is small ReadMe and some settings in the bash script. Things should be pretty self-explanatory - otherwise just send me a message!
From tomorrow on &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; might be the better choice. But no matter which tool you use: encrypt your traffic!&lt;/p&gt;</content><category term="Tech"></category><category term="SSL"></category><category term="HTTPS"></category><category term="VPS"></category><category term="server"></category><category term="security"></category></entry><entry><title>If I post, you tweet!</title><link href="https://blog.thomasemmerling.de/if-i-post-you-tweet.html" rel="alternate"></link><published>2015-07-02T00:00:00+02:00</published><updated>2015-07-02T00:00:00+02:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2015-07-02:/if-i-post-you-tweet.html</id><summary type="html">&lt;p&gt;When I set up the &lt;a href="https://blog.thomasemmerling.de/automatic-pelican-publishing-on-github-pages-via-travisci.html"&gt;automatic pelican publishing&lt;/a&gt; I did not want to stop there to automatize things. I am a late adopter when it comes to Twitter and have only recently started to use it on a regular basis. And more tweets seem to be a good thing on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I set up the &lt;a href="https://blog.thomasemmerling.de/automatic-pelican-publishing-on-github-pages-via-travisci.html"&gt;automatic pelican publishing&lt;/a&gt; I did not want to stop there to automatize things. I am a late adopter when it comes to Twitter and have only recently started to use it on a regular basis. And more tweets seem to be a good thing on this platform. So why not throw in some tweets when I write new content here on my blog? But do it manually? Nah...&lt;/p&gt;
&lt;p&gt;Say hello to IF-This-Then-That or, shorter, &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt;. This is a service to make short program routines (called &lt;em&gt;recipes&lt;/em&gt;) that run automatically and can make your modern digital life much easier when it comes to connectability between alls kinds of apps and services. By now (July 2015) they support an impressive 196 so-called &lt;em&gt;channels&lt;/em&gt; that serve as the connections to bespoke apps and services. Users can share their recipes and your problem has been probably solved by someone else already.&lt;/p&gt;
&lt;p&gt;I went ahead and created a recipe that would monitor the &lt;a href="http://blog.thomasemmerling.de/feeds/all.atom.xml"&gt;atom feed&lt;/a&gt; of this blog and post a new tweet to my &lt;a href="https://twitter.com/thomastweets"&gt;Twitter account&lt;/a&gt; everytime there is a new blog post. You can have a look at the recipe &lt;a href="https://ifttt.com/recipes/304261-tweet-every-new-blog-post"&gt;here&lt;/a&gt;. Actually, it's straightforward to create your own recipes there, so go ahead and try it out!&lt;/p&gt;
&lt;p&gt;By the way, I just tweeted about this blog post...&lt;/p&gt;</content><category term="Tech"></category><category term="automatization"></category><category term="IFTTT"></category><category term="twitter"></category><category term="atom feed"></category></entry><entry><title>Automatic Pelican publishing on GitHub Pages via TravisCI</title><link href="https://blog.thomasemmerling.de/automatic-pelican-publishing-on-github-pages-via-travisci.html" rel="alternate"></link><published>2015-06-27T00:00:00+02:00</published><updated>2015-06-28T00:00:00+02:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2015-06-27:/automatic-pelican-publishing-on-github-pages-via-travisci.html</id><summary type="html">&lt;p&gt;As I wrote in the &lt;a href="https://blog.thomasemmerling.de/fresh-starts.html"&gt;last blog post&lt;/a&gt;, the &lt;em&gt;static site generator&lt;/em&gt; that I use to publish this post is &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;. Rather than generating the HTML on my machine and then pushing it to the &lt;code&gt;gh-pages&lt;/code&gt; branch of &lt;a href="https://github.com/thomastweets/blog.thomasemmerling.de"&gt;github.com/thomastweets/blog.thomasemmerling.de&lt;/a&gt; I automatized this process using &lt;a href="https://travis-ci.org/"&gt;Travis …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I wrote in the &lt;a href="https://blog.thomasemmerling.de/fresh-starts.html"&gt;last blog post&lt;/a&gt;, the &lt;em&gt;static site generator&lt;/em&gt; that I use to publish this post is &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;. Rather than generating the HTML on my machine and then pushing it to the &lt;code&gt;gh-pages&lt;/code&gt; branch of &lt;a href="https://github.com/thomastweets/blog.thomasemmerling.de"&gt;github.com/thomastweets/blog.thomasemmerling.de&lt;/a&gt; I automatized this process using &lt;a href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt;. Travis CI is a &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;continuous integration&lt;/a&gt; that is free to use for open source projects. It can not only run automated tests of your project but also trigger deployment tasks when the build is successful.&lt;/p&gt;
&lt;p&gt;Using information from &lt;a href="http://blog.mathieu-leplatre.info/publish-your-pelican-blog-on-github-pages-via-travis-ci.html"&gt;two&lt;/a&gt; &lt;a href="https://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html"&gt;blogs&lt;/a&gt; I was able to let Travis CI react on any push to GitHub and automatically generate HTML from the Pelican sources and push them back to the &lt;code&gt;gh-pages&lt;/code&gt; branch. Here is how to do that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you have not done that yet: Create a repository on GitHub called (&lt;em&gt;e.g.&lt;/em&gt;) &lt;code&gt;blog.thomasemmerling.de&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add it as a remote to your local git repository from command line (if you use ssh-keys for authentication - you should do so! &lt;a href="https://help.github.com/articles/generating-ssh-keys/"&gt;how to generate&lt;/a&gt; and &lt;a href="https://help.github.com/articles/changing-a-remote-s-url/"&gt;use&lt;/a&gt; them):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Go to your local Pelican sources&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/blog
&lt;span class="c1"&gt;# Add the remote GitHub repository&lt;/span&gt;
git remote add origin git@github.com:thomastweets/blog.thomasemmerling.de.git
&lt;span class="c1"&gt;# set the default upstream and push to it&lt;/span&gt;
git push --set-upstream origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;As Travis CI needs to be able to push to your GitHub repository you need to authenticate it. As you do not want to store any passwords, ssh, or API keys in your repo or the Travis CI configuration the easiest way is to use the &lt;code&gt;travis&lt;/code&gt; command line tool that is available as a gem to encrypt an Authentication Token for GitHub so that Travis CI can decrypt it when needed. First we need to install it:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# on OSX using the default Ruby installation&lt;/span&gt;
sudo gem install travis
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now we create a personal access token on GitHub to use with Travis CI. Follow &lt;a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/"&gt;these instructions&lt;/a&gt; to do so. I named mine &lt;code&gt;TravisCI blog.thomasemmerling.de&lt;/code&gt; and kept the standard scope settings. Copy the token when you created it as you will not be able to see it again after you close the page.&lt;/li&gt;
&lt;li&gt;Encrypt the token with the &lt;code&gt;travis&lt;/code&gt; command line tool:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# where &amp;#39;your_token&amp;#39; is the token from the last step&lt;/span&gt;
travis encrypt &lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_token
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Create a file &lt;code&gt;.travis.yml&lt;/code&gt; (mind the dot at the beginning!) in the root of your git repository and paste the following (replace the encrypted part after &lt;code&gt;- secure:&lt;/code&gt; with what &lt;code&gt;travis encrypt&lt;/code&gt; got back to you):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;A4MpKClryaExBapCaXO3bgATD1KK/SmrdmPz7vk+6aUcJbOnQ/r2A1xjtCUv09PWW+QlA8SRBV626H7tfIONlXwLIn9tt6ZA419uoUWMs8Z2DsLvpHZtmP4TVi4Vi192TQDGqGwCh48aakhHlzWm0DTQKtn2MIJuUGOVOeT8DVhvT0jLOxYLAiRRuJI4OR6hVzHWH0Wa8U2BLC+iNsWn+RKro/HzzilY9p62nAahWe0toqltazQHq8AFMbc9BFuucMbfU/fpPYq1tesacQZG1gUFhs2TG1v7addJY63E0jaQ6jWSLgNdMibEvwmjrkKIeqF0E7J1/xZfoNg2KQpVFARqDkl4NOaf6T4inCaBAlvyxVQ6JszdkasM2AX3zzrg/Ph4ooRQ9sxdshq6g69tWbuDWkUGJMEfcKGfH9cbATeR87TXZZo0J5WajzNae1+zv86E2tVYmQM7wJwdve48wi6q+QpGWShMrT5VVOyLZ5txSYDPKgjCU7LrKqWmwVqEeZC8b49rSam6vsC1QAKsMQ+oiseZFuVAh+ZMpW9Tes9kSSQ1wX/zSepM3jbv+1dIpsjrJNZgQasR/yLAM7QjLQz8TwYG2LNPtOG/gWwdA/txLqGFAWnEgqFXeykbLgFwuFucdRe9I3yFi5VLTbwXw6FonWrjWOvSzKzNydP+fTw=&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;Makefile&lt;/code&gt; in the root directory add (or change) the &lt;code&gt;github&lt;/code&gt; subcommand (this makes the &lt;code&gt;make github&lt;/code&gt; command in the &lt;code&gt;.travis.yml&lt;/code&gt; file work):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;github: publish
    ghp-import -n &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
    @git push -fq https://&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;@github.com/&lt;span class="k"&gt;$(&lt;/span&gt;TRAVIS_REPO_SLUG&lt;span class="k"&gt;)&lt;/span&gt;.git gh-pages &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Add the &lt;code&gt;.travis.yml&lt;/code&gt; file and the &lt;code&gt;Makefile&lt;/code&gt; to your git repository, commit, and push to GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, if all went well, after some minutes you should see a successful build in Travis CI and the new version of your homepage/blog at the &lt;code&gt;.github.io&lt;/code&gt; address (or in my case the custom domain).&lt;/p&gt;</content><category term="Tech"></category><category term="devops"></category><category term="Travis CI"></category><category term="GitHub Pages"></category><category term="Pelican"></category><category term="git"></category><category term="continuous integration"></category></entry><entry><title>Fresh Starts</title><link href="https://blog.thomasemmerling.de/fresh-starts.html" rel="alternate"></link><published>2015-06-21T10:51:00+02:00</published><updated>2015-06-21T10:51:00+02:00</updated><author><name>Thomas Emmerling</name></author><id>tag:blog.thomasemmerling.de,2015-06-21:/fresh-starts.html</id><summary type="html">&lt;p&gt;OK, this is the first day of the rest of my blog life. Over the last years I had a couple of blogs but none survived all the VPS reinstalls or migrations.
This time, however, I chose to host on &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, so that the blog is independent of any …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, this is the first day of the rest of my blog life. Over the last years I had a couple of blogs but none survived all the VPS reinstalls or migrations.
This time, however, I chose to host on &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, so that the blog is independent of any &lt;a href="https://en.wikipedia.org/wiki/DevOps"&gt;devops&lt;/a&gt; experiments I pursue and will hopefully last longer.&lt;/p&gt;
&lt;p&gt;I think that the first post should probably be about the technology that is driving this new blog. So let's start!&lt;/p&gt;
&lt;h3&gt;GitHub Pages&lt;/h3&gt;
&lt;p&gt;Venerable GitHub offers not only the probably most widely used service to host git repositories but also to host (raw html) data if they are present in certain repositories of your GitHub account or a branch called &lt;code&gt;gh-pages&lt;/code&gt;. If you want to know more about it &lt;a href="https://help.github.com/categories/github-pages-basics/"&gt;this&lt;/a&gt; should help you out. You might wonder why you are still looking at the domain &lt;a href="http://blog.thomasemmerling.de"&gt;blog.thomasemmerling.de&lt;/a&gt; and not &lt;a href="https://thomastweets.github.io/blog.thomasemmerling.de/"&gt;thomastweets.github.io/blog.thomasemmerling.de/&lt;/a&gt;: there is an easy way of adding a &lt;a href="https://en.wikipedia.org/wiki/CNAME_record"&gt;CNAME record&lt;/a&gt; to your &lt;a href="https://en.wikipedia.org/wiki/DNS_zone"&gt;DNS zone file&lt;/a&gt; and then add a file called &lt;code&gt;CNAME&lt;/code&gt; to your git repository containing your custom domain (you can read more about that &lt;a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites/"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;Pelican&lt;/h3&gt;
&lt;p&gt;Of course you could just go ahead and start to write HTML that will be your new homepage/blog. Although I like the back-to-the-roots mentality of it this approach it has quite some overhead to maintain some visual aesthetics. This is where &lt;em&gt;static site generators&lt;/em&gt; come in. You can find a quite exhaustive list of static site generators at &lt;a href="https://staticsitegenerators.net/"&gt;staticsitegenerators.net&lt;/a&gt;. As I really like Python I chose &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;. You can choose from a lot available &lt;a href="https://github.com/getpelican/pelican-themes"&gt;themes&lt;/a&gt; or, of course, write your own. I use the nice &lt;a href="https://svbtle.com/"&gt;svbtle&lt;/a&gt;-like &lt;a href="https://github.com/gfidente/pelican-svbhack"&gt;svbhack&lt;/a&gt; by &lt;a href="http://giuliofidente.com/"&gt;Guilio Fidente&lt;/a&gt;. I like the fresh and clean looks of it.&lt;/p&gt;
&lt;p&gt;I stop here for today. In the next post I am going to write about a nice way to automatize the publishing process using &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;continuous integration&lt;/a&gt;.&lt;/p&gt;</content><category term="News"></category></entry></feed>